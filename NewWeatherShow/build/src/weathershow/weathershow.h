/* weathershow.h generated by valac 0.40.4, the Vala compiler, do not modify */


#ifndef __SRC_WEATHERSHOW_WEATHERSHOW_H__
#define __SRC_WEATHERSHOW_WEATHERSHOW_H__

#include <glib.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <gee.h>
#include <gtk/gtk.h>
#include <gio/gio.h>
#include <libpeas/peas.h>
#include <plugin.h>

G_BEGIN_DECLS


#define WEATHER_SHOW_APPLET_TYPE_GET_WEATHERDATA (weather_show_applet_get_weatherdata_get_type ())
#define WEATHER_SHOW_APPLET_GET_WEATHERDATA(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WEATHER_SHOW_APPLET_TYPE_GET_WEATHERDATA, WeatherShowAppletGetWeatherdata))
#define WEATHER_SHOW_APPLET_GET_WEATHERDATA_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WEATHER_SHOW_APPLET_TYPE_GET_WEATHERDATA, WeatherShowAppletGetWeatherdataClass))
#define WEATHER_SHOW_APPLET_IS_GET_WEATHERDATA(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WEATHER_SHOW_APPLET_TYPE_GET_WEATHERDATA))
#define WEATHER_SHOW_APPLET_IS_GET_WEATHERDATA_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WEATHER_SHOW_APPLET_TYPE_GET_WEATHERDATA))
#define WEATHER_SHOW_APPLET_GET_WEATHERDATA_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WEATHER_SHOW_APPLET_TYPE_GET_WEATHERDATA, WeatherShowAppletGetWeatherdataClass))

typedef struct _WeatherShowAppletGetWeatherdata WeatherShowAppletGetWeatherdata;
typedef struct _WeatherShowAppletGetWeatherdataClass WeatherShowAppletGetWeatherdataClass;
typedef struct _WeatherShowAppletGetWeatherdataPrivate WeatherShowAppletGetWeatherdataPrivate;

#define WEATHER_SHOW_APPLET_TYPE_WEATHER_SHOW_SETTINGS (weather_show_applet_weather_show_settings_get_type ())
#define WEATHER_SHOW_APPLET_WEATHER_SHOW_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WEATHER_SHOW_APPLET_TYPE_WEATHER_SHOW_SETTINGS, WeatherShowAppletWeatherShowSettings))
#define WEATHER_SHOW_APPLET_WEATHER_SHOW_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WEATHER_SHOW_APPLET_TYPE_WEATHER_SHOW_SETTINGS, WeatherShowAppletWeatherShowSettingsClass))
#define WEATHER_SHOW_APPLET_IS_WEATHER_SHOW_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WEATHER_SHOW_APPLET_TYPE_WEATHER_SHOW_SETTINGS))
#define WEATHER_SHOW_APPLET_IS_WEATHER_SHOW_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WEATHER_SHOW_APPLET_TYPE_WEATHER_SHOW_SETTINGS))
#define WEATHER_SHOW_APPLET_WEATHER_SHOW_SETTINGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WEATHER_SHOW_APPLET_TYPE_WEATHER_SHOW_SETTINGS, WeatherShowAppletWeatherShowSettingsClass))

typedef struct _WeatherShowAppletWeatherShowSettings WeatherShowAppletWeatherShowSettings;
typedef struct _WeatherShowAppletWeatherShowSettingsClass WeatherShowAppletWeatherShowSettingsClass;
typedef struct _WeatherShowAppletWeatherShowSettingsPrivate WeatherShowAppletWeatherShowSettingsPrivate;

#define WEATHER_SHOW_APPLET_TYPE_PLUGIN (weather_show_applet_plugin_get_type ())
#define WEATHER_SHOW_APPLET_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WEATHER_SHOW_APPLET_TYPE_PLUGIN, WeatherShowAppletPlugin))
#define WEATHER_SHOW_APPLET_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WEATHER_SHOW_APPLET_TYPE_PLUGIN, WeatherShowAppletPluginClass))
#define WEATHER_SHOW_APPLET_IS_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WEATHER_SHOW_APPLET_TYPE_PLUGIN))
#define WEATHER_SHOW_APPLET_IS_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WEATHER_SHOW_APPLET_TYPE_PLUGIN))
#define WEATHER_SHOW_APPLET_PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WEATHER_SHOW_APPLET_TYPE_PLUGIN, WeatherShowAppletPluginClass))

typedef struct _WeatherShowAppletPlugin WeatherShowAppletPlugin;
typedef struct _WeatherShowAppletPluginClass WeatherShowAppletPluginClass;
typedef struct _WeatherShowAppletPluginPrivate WeatherShowAppletPluginPrivate;

#define WEATHER_SHOW_APPLET_TYPE_WEATHER_SHOW_POPOVER (weather_show_applet_weather_show_popover_get_type ())
#define WEATHER_SHOW_APPLET_WEATHER_SHOW_POPOVER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WEATHER_SHOW_APPLET_TYPE_WEATHER_SHOW_POPOVER, WeatherShowAppletWeatherShowPopover))
#define WEATHER_SHOW_APPLET_WEATHER_SHOW_POPOVER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WEATHER_SHOW_APPLET_TYPE_WEATHER_SHOW_POPOVER, WeatherShowAppletWeatherShowPopoverClass))
#define WEATHER_SHOW_APPLET_IS_WEATHER_SHOW_POPOVER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WEATHER_SHOW_APPLET_TYPE_WEATHER_SHOW_POPOVER))
#define WEATHER_SHOW_APPLET_IS_WEATHER_SHOW_POPOVER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WEATHER_SHOW_APPLET_TYPE_WEATHER_SHOW_POPOVER))
#define WEATHER_SHOW_APPLET_WEATHER_SHOW_POPOVER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WEATHER_SHOW_APPLET_TYPE_WEATHER_SHOW_POPOVER, WeatherShowAppletWeatherShowPopoverClass))

typedef struct _WeatherShowAppletWeatherShowPopover WeatherShowAppletWeatherShowPopover;
typedef struct _WeatherShowAppletWeatherShowPopoverClass WeatherShowAppletWeatherShowPopoverClass;
typedef struct _WeatherShowAppletWeatherShowPopoverPrivate WeatherShowAppletWeatherShowPopoverPrivate;

#define WEATHER_SHOW_APPLET_TYPE_APPLET (weather_show_applet_applet_get_type ())
#define WEATHER_SHOW_APPLET_APPLET(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WEATHER_SHOW_APPLET_TYPE_APPLET, WeatherShowAppletApplet))
#define WEATHER_SHOW_APPLET_APPLET_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WEATHER_SHOW_APPLET_TYPE_APPLET, WeatherShowAppletAppletClass))
#define WEATHER_SHOW_APPLET_IS_APPLET(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WEATHER_SHOW_APPLET_TYPE_APPLET))
#define WEATHER_SHOW_APPLET_IS_APPLET_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WEATHER_SHOW_APPLET_TYPE_APPLET))
#define WEATHER_SHOW_APPLET_APPLET_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WEATHER_SHOW_APPLET_TYPE_APPLET, WeatherShowAppletAppletClass))

typedef struct _WeatherShowAppletApplet WeatherShowAppletApplet;
typedef struct _WeatherShowAppletAppletClass WeatherShowAppletAppletClass;
typedef struct _WeatherShowAppletAppletPrivate WeatherShowAppletAppletPrivate;

struct _WeatherShowAppletGetWeatherdata {
	GTypeInstance parent_instance;
	volatile int ref_count;
	WeatherShowAppletGetWeatherdataPrivate * priv;
};

struct _WeatherShowAppletGetWeatherdataClass {
	GTypeClass parent_class;
	void (*finalize) (WeatherShowAppletGetWeatherdata *self);
};

struct _WeatherShowAppletWeatherShowSettings {
	GtkGrid parent_instance;
	WeatherShowAppletWeatherShowSettingsPrivate * priv;
};

struct _WeatherShowAppletWeatherShowSettingsClass {
	GtkGridClass parent_class;
};

struct _WeatherShowAppletPlugin {
	PeasExtensionBase parent_instance;
	WeatherShowAppletPluginPrivate * priv;
};

struct _WeatherShowAppletPluginClass {
	PeasExtensionBaseClass parent_class;
};

struct _WeatherShowAppletWeatherShowPopover {
	BudgiePopover parent_instance;
	WeatherShowAppletWeatherShowPopoverPrivate * priv;
};

struct _WeatherShowAppletWeatherShowPopoverClass {
	BudgiePopoverClass parent_class;
};

struct _WeatherShowAppletApplet {
	BudgieApplet parent_instance;
	WeatherShowAppletAppletPrivate * priv;
};

struct _WeatherShowAppletAppletClass {
	BudgieAppletClass parent_class;
};


gpointer weather_show_applet_get_weatherdata_ref (gpointer instance);
void weather_show_applet_get_weatherdata_unref (gpointer instance);
GParamSpec* weather_show_applet_param_spec_get_weatherdata (const gchar* name,
                                                            const gchar* nick,
                                                            const gchar* blurb,
                                                            GType object_type,
                                                            GParamFlags flags);
void weather_show_applet_value_set_get_weatherdata (GValue* value,
                                                    gpointer v_object);
void weather_show_applet_value_take_get_weatherdata (GValue* value,
                                                     gpointer v_object);
gpointer weather_show_applet_value_get_get_weatherdata (const GValue* value);
GType weather_show_applet_get_weatherdata_get_type (void) G_GNUC_CONST;
gchar* weather_show_applet_get_weatherdata_get_current (WeatherShowAppletGetWeatherdata* self);
GeeHashMap* weather_show_applet_get_weatherdata_get_forecast (WeatherShowAppletGetWeatherdata* self);
WeatherShowAppletGetWeatherdata* weather_show_applet_get_weatherdata_new (void);
WeatherShowAppletGetWeatherdata* weather_show_applet_get_weatherdata_construct (GType object_type);
GType weather_show_applet_weather_show_settings_get_type (void) G_GNUC_CONST;
WeatherShowAppletWeatherShowSettings* weather_show_applet_weather_show_settings_new (GSettings* settings);
WeatherShowAppletWeatherShowSettings* weather_show_applet_weather_show_settings_construct (GType object_type,
                                                                                           GSettings* settings);
void weather_show_applet_weather_show_settings_update_transparencysettings (WeatherShowAppletWeatherShowSettings* self,
                                                                            GtkRange* slider);
void weather_show_applet_weather_show_settings_set_initialtransparency (WeatherShowAppletWeatherShowSettings* self);
GType weather_show_applet_plugin_get_type (void) G_GNUC_CONST;
WeatherShowAppletPlugin* weather_show_applet_plugin_new (void);
WeatherShowAppletPlugin* weather_show_applet_plugin_construct (GType object_type);
GType weather_show_applet_weather_show_popover_get_type (void) G_GNUC_CONST;
WeatherShowAppletWeatherShowPopover* weather_show_applet_weather_show_popover_new (GtkEventBox* indicatorBox);
WeatherShowAppletWeatherShowPopover* weather_show_applet_weather_show_popover_construct (GType object_type,
                                                                                         GtkEventBox* indicatorBox);
GType weather_show_applet_applet_get_type (void) G_GNUC_CONST;
WeatherShowAppletApplet* weather_show_applet_applet_new (void);
WeatherShowAppletApplet* weather_show_applet_applet_construct (GType object_type);
void weather_show_applet_applet_initialiseLocaleLanguageSupport (WeatherShowAppletApplet* self);
const gchar* weather_show_applet_applet_get_uuid (WeatherShowAppletApplet* self);
void weather_show_applet_applet_set_uuid (WeatherShowAppletApplet* self,
                                          const gchar* value);
void peas_register_types (GTypeModule* module);


G_END_DECLS

#endif
